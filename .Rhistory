ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
g1 <- boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
g2 <- boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange((g1, g2), nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
g1 <- boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
g2 <- boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange(g1, g2, ncol=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
g1 <- boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
g2 <- boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange(g1, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
g1 <- boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
g2 <- boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
#grid.arrange(g1, g2, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text")
grid.arrange(t, p, p2, r, ncol=2)
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
g1 <- boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
g2 <- boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
#grid.arrange(g1, g2, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text")
grid.arrange(t, p, p2, ncol=2)
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
g1= ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
g2= ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
g3= ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
#g1 <- boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
#g2 <- boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange(g1, g2, g3, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
help(ggplot)
help("geom_boxplot")
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
#g1 <- boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
#g2 <- boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
g1 <- ggplot(DataBio[c(1:18)])+geom_boxplot()
g2 <- ggplot(DataBio[c(19:36)])+geom_boxplot()
grid.arrange(g1, g2, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
#print("T1 & T2")
#prop.table(table(ExpT$ExpT1, ExpT$ExpT2), margin=2)
g1 <- ggplot(DataBio, aes(fill=ExpT$ExpT1, x=ExpT$ExpT2))+geom_bar(position="fill")
#print("T1 & T3")
#prop.table(table(ExpT$ExpT1, ExpT$ExpT3), margin=2)
g2 <- ggplot(DataBio, aes(fill=ExpT$ExpT1, x=ExpT$ExpT3))+geom_bar(position="fill")
#print("T3 & T2")
#prop.table(table(ExpT$ExpT3, ExpT$ExpT2), margin=1)
g3 <- ggplot(DataBio, aes(x=ExpT$ExpT3, fill=ExpT$ExpT2))+geom_bar(position="fill")
grid.arrange(g1, g2, g3, nrow=2)
if (!require("BioStatR")) install.packages("BioStatR")
library(BioStatR)
T1 <- DataBio[c(1:6, 19:24)]
T2 <- DataBio[c(7:12, 25:30)]
T3 <- DataBio[c(13:18, 31:36)]
Lt1_expt1 <- matrix(1:36, ncol=3)
rownames(Lt1_expt1) = c(paste(1:6,"H_R", 1, sep = ""), paste(1:6,"H_R", 2, sep = ""))
colnames(Lt1_expt1) = c(paste("Heure", sep = ""), paste("Replicat", sep = ""), paste("Liaison_T1ExpT1", sep = ""))
Lt2_expt2 <- matrix(1:36, ncol=3)
rownames(Lt2_expt2) = c(paste(1:6,"H_R", 1, sep = ""), paste(1:6,"H_R", 2, sep = ""))
colnames(Lt2_expt2) = c(paste("Heure", sep = ""), paste("Replicat", sep = ""), paste("Liaison_T2ExpT2", sep = ""))
Lt3_expt3 <- matrix(1:36, ncol=3)
rownames(Lt3_expt3) = c(paste(1:6,"H_R", 1, sep = ""), paste(1:6,"H_R", 2, sep = ""))
colnames(Lt3_expt3) = c(paste("Heure", sep = ""), paste("Replicat", sep = ""), paste("Liaison_T3ExpT3", sep = ""))
for (i in 1:12){
Lt1_expt1[i,3] = eta2(T1[,i], ExpT$ExpT1)
Lt2_expt2[i,3] = eta2(T2[,i], ExpT$ExpT2)
Lt3_expt3[i,3] = eta2(T3[,i], ExpT$ExpT3)
if (i<=6){
Lt1_expt1[i,1] = i
Lt2_expt2[i,1] = i
Lt3_expt3[i,1] = i
Lt1_expt1[i,2] = 1
Lt2_expt2[i,2] = 1
Lt3_expt3[i,2] = 1
} else {
Lt1_expt1[i,1] = i - 6
Lt2_expt2[i,1] = i - 6
Lt3_expt3[i,1] = i - 6
Lt1_expt1[i,2] = 2
Lt2_expt2[i,2] = 2
Lt3_expt3[i,2] = 2
}
}
Lt1_expt1 = data.frame(Lt1_expt1)
Lt2_expt2 = data.frame(Lt2_expt2)
Lt3_expt3 = data.frame(Lt3_expt3)
Lt1_expt1[,2] = as.factor(Lt1_expt1[,2])
Lt2_expt2[,2] = as.factor(Lt2_expt2[,2])
Lt3_expt3[,2] = as.factor(Lt3_expt3[,2])
g1 = ggplot(Lt1_expt1, aes(x=Heure, y=Liaison_T1ExpT1, colour=Replicat))+geom_line()
g2 = ggplot(Lt2_expt2, aes(x=Heure, y=Liaison_T2ExpT2, colour=Replicat))+geom_line()
g3 = ggplot(Lt3_expt3, aes(x=Heure, y=Liaison_T3ExpT3, colour=Replicat))+geom_line()
grid.arrange(g1, g2, g3, nrow=2)
corT1T2 = cor(T1, T2)
corT1T3 = cor(T1, T3)
corT2T3 = cor(T2, T3)
g1 = corrplot(corr = corT1T2, method="ellipse")
g2 = corrplot(corr = corT1T3, method="ellipse")
g3 = corrplot(corr = corT2T3, method="ellipse")
grid.arrange(g1, g2, g3, nrow=2)
#Pour installer les packages
if (!require("FactoMineR")) install.packages("FactoMineR")
if (!require("factoextra")) install.packages("factoextra")
if (!require("corrplot")) install.packages("corrplot")
library(FactoMineR)
library(factoextra)
library(corrplot)
# A présent, on passe sur l'ACP Centrée. Pour cela, on commence par centrer notre jeu de données.
#ACP Centrée réduite (Toutes les variables ont la même importance)
Tt_sH_Rr <- t(DataBio[c(1: 36)])
DataBioCR <- scale(Tt_sH_Rr, center=TRUE, scale=T)
# On fait la transposée pour avoir : les Tt_sH_Rr décrits par les gènes (J'avour je suis pas sûr à 100% pour ce passage. Sinon on peut enlever la transposée)
ACP_DataBio_reduite <- PCA(DataBio[c(1:36)],  scale.unit = T, graph = F)
ACP_DataBio_reduite$eig
g1 = fviz_eig(ACP_DataBio_reduite,addlabels = TRUE, ylim = c(0, 100), main = "Valeurs propres")
# Projection des individus
g2 = fviz_pca_ind(ACP_DataBio_reduite, geom = c("point"),col.ind = "cos2", gradient.cols = c("blue", "red"), repel = TRUE, title = "Projection des individus (Tt_sH_Rr)")
grid.arrange(g1, g2, ncol=2)
#Pour installer les packages
if (!require("FactoMineR")) install.packages("FactoMineR")
if (!require("factoextra")) install.packages("factoextra")
if (!require("corrplot")) install.packages("corrplot")
library(FactoMineR)
library(factoextra)
library(corrplot)
# A présent, on passe sur l'ACP Centrée. Pour cela, on commence par centrer notre jeu de données.
#ACP Centrée réduite (Toutes les variables ont la même importance)
Tt_sH_Rr <- t(DataBio[c(1: 36)])
DataBioCR <- scale(Tt_sH_Rr, center=TRUE, scale=T)
# On fait la transposée pour avoir : les Tt_sH_Rr décrits par les gènes (J'avour je suis pas sûr à 100% pour ce passage. Sinon on peut enlever la transposée)
ACP_DataBio_reduite <- PCA(DataBio[c(1:36)],  scale.unit = T, graph = F)
ACP_DataBio_reduite$eig
g1 = fviz_eig(ACP_DataBio_reduite,addlabels = TRUE, ylim = c(0, 100), main = "Valeurs propres")
# Projection des individus
g2 = fviz_pca_ind(ACP_DataBio_reduite, geom = c("point"),col.ind = "cos2", gradient.cols = c("blue", "red"), repel = TRUE, title = "Projection des individus (Tt_sH_Rr)")
grid.arrange(g1, g2, nrow=2)
if (!require("forcats")) install.packages("forcats")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("corrplot")) install.packages("corrplot")
if (!require("FactoMineR")) install.packages("FactoMineR")
if (!require("factoextra")) install.packages("factoextra")
if (!require("mclust")) install.packages("mclust")
if (!require("cluster")) install.packages("cluster")
if (!require("ppclust")) install.packages("ppclust")
if (!require("circlize")) install.packages("circlize")
if (!require("ggalluvial")) install.packages("ggalluvial")
library(forcats)
library(ggplot2)
library(corrplot)
library(reshape2)
library(FactoMineR)
library(factoextra)
library(mclust)
library(cluster)
library(ppclust)
library(circlize)
library(ggalluvial)
# Maintenant que l'ACP a été effectuée, on fait un clustering des classes à l'aide de la méthode K-means.
# Avant de débuter le clustering avec la méthode K-means, il faut déterminer le nombre de classes.
Kmax<-20
reskmeanscl<-matrix(0,nrow=nrow(DataBio),ncol=Kmax-1)
Iintra<-NULL
for (k in 1:Kmax){
resaux<-kmeans(DataBioCR,centers=k)
reskmeanscl<-resaux$cluster #pourquoi le [,k-1] ?
Iintra<-c(Iintra,resaux$tot.withinss) # tot.withinss correspond à la somme des composantes au carré des éléments du cluster par cluster
}
df<-data.frame(K=1:20,Iintra=Iintra)
g1 = ggplot(df,aes(x=K,y=Iintra))+
geom_line()+
geom_point()+
xlab("Nombre de classes")+
ylab("Inertie intraclasse")
# Avec cette méthode, on dirait que le coude correspond lorsque le nombre de classes est de 2.
# On va alors utiliser 2 classes pour la méthode des K-means.
reskmeans<-kmeans(DataBioCR,centers = 2)
g2 = fviz_cluster(reskmeans,data=Tt_sH_Rr,
ellipse.type="norm",labelsize=8,
geom=c("point"))+ggtitle("")
#fviz_pca_ind(resacp,col.ind=as.factor(reskmeans$cluster),geom = c("point"),axes=c(1,2))
# A présent, on va essayer une autre méthode, la méthode hiérarchique.
# D'une part, on fait le calcul de la matrice de distances
dist_matrix <- dist(DataBioCR, method = "euclidean")
# Clustering hiérarchique avec la méthode de liaison "ward.D2", on peut aussi faire avec "single", "complete","average" ...
hc <- hclust(dist_matrix, method = "ward.D2")
# Afficher le dendrogramme
g3 = fviz_dend(hc,k=2,show_labels = FALSE,
rect = TRUE, rect_fill = TRUE,palette = "npg",
rect_border = "npg",
labels_track_height = 0.8)+ggtitle("")
# (Le temps de chargement est plutôt long, C'est NORMAL)
grid.arrange(g1, g2, g3, nrow=2)
help("grid")
help("grid.arrange")
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
g1 = ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
g2 = ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
g3 = ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange(g1, g2, g3, nrow=2, newpage = F) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
g1 = ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
g2 = ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
g3 = ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange(g1, g2, g3, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
grid.arrange(newpage = F)
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
g1 = ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
g2 = ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
g3 = ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange(g1, g2, g3, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
grid.arrange(nrow = 2, newpage = F)
if (!require("grid")) install.packages("grid")
library(grid)
if (!require("gridExtra")) install.packages("gridExtra")
library(gridExtra)
if (!require("lattice")) install.packages("lattice")
library(lattice)
# Faire une Analyse Unidimensionnelle du jeu de données.
# On commence par l'analyse des variables Qualitatives
# Effectif :
ExpT <- DataBio[(c(37,38,39))]
effT1 <- table(DataBio$ExpT1)
effT2 <- table(DataBio$ExpT2)
effT3 <- table(DataBio$ExpT3)
#print(effT1)
#print(effT2)
#print(effT3)
# Fréquence :
freqT1<-data.frame(effT1=c(effT1),Freq=c(effT1)/sum(effT1))
freqT2<-data.frame(effT2=c(effT2),Freq=c(effT2)/sum(effT2))
freqT3<-data.frame(effT3=c(effT3),Freq=c(effT3)/sum(effT3))
#print(freqT1)
#print(freqT2)
#print(freqT3)
# GGplot des variables qualitatives (Exp T1,T2,T3)
g1 = ggplot(DataBio, aes(x = ExpT1)) + geom_bar(fill = "blue")
g2 = ggplot(DataBio, aes(x = ExpT2)) + geom_bar(fill = "green")
g3 = ggplot(DataBio, aes(x = ExpT3)) + geom_bar(fill = "red")
# Pour les variables quantitatives
boxplot(DataBio[c(1:18)], main = "Expression sous R1", col = "lightblue")
boxplot(DataBio[c(19:36)], main = "Expression sous R2", col = "lightblue")
grid.arrange(g1, g2, nrow=2) #<-- Cette Ligne ne marche pas et je ne comprends pas pourquoi.
grid.arrange(g3, nrow = 2, newpage = F)
